"use client"

import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { LiquidModelService } from "@/services/liquid-model-service"
import { useEffect, useState } from "react"

interface Vulnerability {
  id: string
  cve: string
  description: string
  severity: string
  status: string
  affectedAssets: string[]
  remediation: string[]
}

export function VulnerabilityFindings() {
  const [vulnerabilities, setVulnerabilities] = useState<Vulnerability[]>([])
  const [loading, setLoading] = useState(true)

  useEffect(() => {
    const fetchVulnerabilities = async () => {
      try {
        const liquidModel = LiquidModelService.getInstance()
        const data = await liquidModel.getVulnerabilities()
        setVulnerabilities(data)
      } catch (error) {
        console.error('Error fetching vulnerabilities:', error)
      } finally {
        setLoading(false)
      }
    }

    fetchVulnerabilities()
  }, [])

  if (loading) {
    return <div>Loading vulnerabilities...</div>
  }

  return (
    <Card>
      <CardHeader>
        <CardTitle>Recent Vulnerability Findings</CardTitle>
      </CardHeader>
      <CardContent>
        <div className="space-y-4">
          {vulnerabilities.map((vuln) => (
            <div key={vuln.id} className="border p-4 rounded-lg">
              <h3 className="font-bold">{vuln.cve}</h3>
              <p className="text-sm text-gray-600">{vuln.description}</p>
              <div className="mt-2 flex gap-2">
                <span className={`px-2 py-1 rounded text-sm ${
                  vuln.severity === 'critical' ? 'bg-red-100 text-red-800' :
                  vuln.severity === 'high' ? 'bg-orange-100 text-orange-800' :
                  vuln.severity === 'medium' ? 'bg-yellow-100 text-yellow-800' :
                  'bg-green-100 text-green-800'
                }`}>
                  {vuln.severity}
                </span>
                <span className="px-2 py-1 rounded text-sm bg-gray-100">
                  {vuln.status}
                </span>
              </div>
            </div>
          ))}
        </div>
      </CardContent>
    </Card>
  )
}
